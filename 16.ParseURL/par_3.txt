{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "fname = 'url_list.txt'\n",
    "data = pd.read_csv(fname, header=-1, delimiter='\\n')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "from urllib.parse import urlparse, parse_qs, urlsplit\n",
    "n = pd.DataFrame(data=(parse_qs(urlsplit(data[0][line]).query) for line in range(len(data))))\n",
    "for column in n:\n",
    "    n[column] = n[column].str[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "n = n.rename(columns={'hotel.adults': 'Adults', 'hotel.amenities': 'Amenities', 'hotel.checkin': 'Check-In', \n",
    "                      'hotel.checkout': 'Check Out', 'hotel.children':'Children', 'hotel.city':'City', \n",
    "                      'hotel.couponCode':'Coupon', 'hotel.custumMaximumPriceFilter':'Max-Price',\n",
    "                      'hotel.customMinimumPriceFilter':'Min-Price','hotel.freeCancellation':'Free Cancellation',\n",
    "                      'hotel.max_score':'Max-Score','hotel.min_score':'Min-Score','hotel.search_page':'Search Page',\n",
    "                      'hotel.stars_1':'1 Star','hotel.stars_2':'2 Stars','hotel.stars_3':'3 Stars','hotel.stars_4':'4 Stars',\n",
    "                      'hotel.stars_5':'5 Stars'})\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = n[['City', 'Search Page']]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>City</th>\n",
       "      <th>Search Page</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>New York, NY, United States</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>London, United Kingdom</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>New York, NY, United States</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Hong Kong, Hong Kong</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>London, United Kingdom</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>San Francisco, California, United States</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Hong Kong, Hong Kong</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>San Francisco, California, United States</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>New York, NY, United States</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>New York, NY, United States</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>London, United Kingdom</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Hong Kong, Hong Kong</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Hong Kong, Hong Kong</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>London, United Kingdom</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>New York, NY, United States</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>San Francisco, California, United States</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>San Francisco, California, United States</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>New York, NY, United States</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>London, United Kingdom</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>New York, NY, United States</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>New York, NY, United States</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>New York, NY, United States</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>New York, NY, United States</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>San Francisco, California, United States</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>New York, NY, United States</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>Hong Kong, Hong Kong</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>London, United Kingdom</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>London, United Kingdom</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>New York, NY, United States</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>New York, NY, United States</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77647</th>\n",
       "      <td>London, United Kingdom</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77648</th>\n",
       "      <td>London, United Kingdom</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77649</th>\n",
       "      <td>London, United Kingdom</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77650</th>\n",
       "      <td>London, United Kingdom</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77651</th>\n",
       "      <td>London, United Kingdom</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77652</th>\n",
       "      <td>London, United Kingdom</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77653</th>\n",
       "      <td>London, United Kingdom</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77654</th>\n",
       "      <td>London, United Kingdom</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77655</th>\n",
       "      <td>London, United Kingdom</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77656</th>\n",
       "      <td>San Francisco, California, United States</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77657</th>\n",
       "      <td>London, United Kingdom</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77658</th>\n",
       "      <td>Hong Kong, Hong Kong</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77659</th>\n",
       "      <td>London, United Kingdom</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77660</th>\n",
       "      <td>Hong Kong, Hong Kong</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77661</th>\n",
       "      <td>New York, NY, United States</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77662</th>\n",
       "      <td>New York, NY, United States</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77663</th>\n",
       "      <td>New York, NY, United States</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77664</th>\n",
       "      <td>New York, NY, United States</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77665</th>\n",
       "      <td>New York, NY, United States</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77666</th>\n",
       "      <td>New York, NY, United States</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77667</th>\n",
       "      <td>New York, NY, United States</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77668</th>\n",
       "      <td>Hong Kong, Hong Kong</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77669</th>\n",
       "      <td>London, United Kingdom</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77670</th>\n",
       "      <td>London, United Kingdom</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77671</th>\n",
       "      <td>London, United Kingdom</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77672</th>\n",
       "      <td>London, United Kingdom</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77673</th>\n",
       "      <td>London, United Kingdom</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77674</th>\n",
       "      <td>London, United Kingdom</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77675</th>\n",
       "      <td>San Francisco, California, United States</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77676</th>\n",
       "      <td>New York, NY, United States</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>77677 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                           City Search Page\n",
       "0                   New York, NY, United States           1\n",
       "1                        London, United Kingdom           1\n",
       "2                   New York, NY, United States           1\n",
       "3                          Hong Kong, Hong Kong           1\n",
       "4                        London, United Kingdom           1\n",
       "5      San Francisco, California, United States           1\n",
       "6                          Hong Kong, Hong Kong           1\n",
       "7      San Francisco, California, United States           1\n",
       "8                   New York, NY, United States           1\n",
       "9                   New York, NY, United States           1\n",
       "10                       London, United Kingdom           1\n",
       "11                         Hong Kong, Hong Kong           1\n",
       "12                         Hong Kong, Hong Kong           1\n",
       "13                       London, United Kingdom           1\n",
       "14                  New York, NY, United States           1\n",
       "15     San Francisco, California, United States           1\n",
       "16     San Francisco, California, United States           2\n",
       "17                  New York, NY, United States           1\n",
       "18                       London, United Kingdom           1\n",
       "19                  New York, NY, United States           1\n",
       "20                  New York, NY, United States           1\n",
       "21                  New York, NY, United States           2\n",
       "22                  New York, NY, United States           1\n",
       "23     San Francisco, California, United States           1\n",
       "24                  New York, NY, United States           1\n",
       "25                         Hong Kong, Hong Kong           1\n",
       "26                       London, United Kingdom           1\n",
       "27                       London, United Kingdom           2\n",
       "28                  New York, NY, United States           1\n",
       "29                  New York, NY, United States           1\n",
       "...                                         ...         ...\n",
       "77647                    London, United Kingdom           1\n",
       "77648                    London, United Kingdom           2\n",
       "77649                    London, United Kingdom           3\n",
       "77650                    London, United Kingdom           4\n",
       "77651                    London, United Kingdom           5\n",
       "77652                    London, United Kingdom           6\n",
       "77653                    London, United Kingdom           7\n",
       "77654                    London, United Kingdom           8\n",
       "77655                    London, United Kingdom           1\n",
       "77656  San Francisco, California, United States           1\n",
       "77657                    London, United Kingdom           1\n",
       "77658                      Hong Kong, Hong Kong           1\n",
       "77659                    London, United Kingdom           1\n",
       "77660                      Hong Kong, Hong Kong           1\n",
       "77661               New York, NY, United States           1\n",
       "77662               New York, NY, United States           2\n",
       "77663               New York, NY, United States           3\n",
       "77664               New York, NY, United States           4\n",
       "77665               New York, NY, United States           5\n",
       "77666               New York, NY, United States           6\n",
       "77667               New York, NY, United States           1\n",
       "77668                      Hong Kong, Hong Kong           1\n",
       "77669                    London, United Kingdom           1\n",
       "77670                    London, United Kingdom           2\n",
       "77671                    London, United Kingdom           1\n",
       "77672                    London, United Kingdom           2\n",
       "77673                    London, United Kingdom           3\n",
       "77674                    London, United Kingdom           4\n",
       "77675  San Francisco, California, United States           1\n",
       "77676               New York, NY, United States           1\n",
       "\n",
       "[77677 rows x 2 columns]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'yes_smoking': 174,\n",
       " 'shuttle': 111,\n",
       " 'internet': 272,\n",
       " 'yes_pet': 85,\n",
       " 'breakfast': 40,\n",
       " 'lounge': 22}"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "amenities = n[n.iloc[:,1].notnull()] #find all amenity values\n",
    "am = amenities['Amenities'].unique()\n",
    "amenities_dict = {}\n",
    "for line in am:\n",
    "    amenities_dict[line] = 0\n",
    "    \n",
    "for choice in am:\n",
    "    #sumam = 0\n",
    "    leng = 0\n",
    "    for row in range(len(amenities)):\n",
    "        if amenities.iloc[row, 1] == choice:\n",
    "            leng += 1\n",
    "            #sumc += int(df.iloc[row, 1])\n",
    "    amenities_dict[choice] = leng\n",
    "amenities_dict"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "result = df.sort_values(by=['City'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "cities = df['City'].unique()\n",
    "cities_dict = {}\n",
    "for line in cities:\n",
    "    cities_dict[line] = 0\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "#cities_dict"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'New York, NY, United States': 2.127688537979853,\n",
       " 'London, United Kingdom': 2.2154822154109346,\n",
       " 'Hong Kong, Hong Kong': 1.132105888342101,\n",
       " 'San Francisco, California, United States': 1.0508935968753699}"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "for city in cities:\n",
    "    sumc = 0\n",
    "    leng = 0\n",
    "    for row in range(len(df)):\n",
    "        if df.iloc[row, 0] == city:\n",
    "            leng += 1\n",
    "            sumc += int(df.iloc[row, 1])\n",
    "    cities_dict[city] = sumc/leng\n",
    "cities_dict"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
